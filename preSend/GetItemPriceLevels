/**
 * Called from integrator.io prior to sending the data to integrator.io
 * 
 * @param {Object}
 *            options The data sent to the hook. See SamplePreSendDataBatch.json
 *            for format
 * @return {Object} response containing the data sent to integrator.io
 */
var getItemPrices = function(options) {

	// The object that will be returned from this hook
	var response = {};
	response.data = [];
	response.errors = [];

	for (var i = 0; i < options.data.length; i++) {
		/*
		 * The response object contains of a data array and an errors array The data
		 * array is the elements that will be processed by integrator.io The errors
		 * array will show up as failed records on the integrator.io dashboard. Each
		 * element in the array may consist of one or more errors
		 */

		response.data.push(JSON.parse(JSON.stringify(options.data[i])));
	}

	try {
		for (var k = 0; k < response.data.length; k++) {
			var priceLines = ['price1','price2','price3','price4'];
			var item = nlapiLoadRecord('inventoryitem', response.data[k].id);
			for(var i=0; i<priceLines.length; i++){
			    for(var j=1; j<=item.getLineItemCount(priceLines[i]); j++){
			        response.data[k][priceLines[i] + '_' + item.getLineItemValue(priceLines[i], 'pricelevel', j)] = item.getLineItemMatrixValue(priceLines[i], 'price', j, 1);
			    }
			}
		}

	} catch (e) {
		nlapiLogExecution('ERROR', e.name, e.message);
		/*
		 * the individual error should be logged in the function called within
		 * the try-catch block
		 */
		for (var i = 0; i < response.data.length; i++) {
			response.data[i] = null;
			response.errors.push({
				code : e.name,
				message : e.message
			});
		}

	}

	// Send the data to integrator.io for further processing
	return response;

};

